32.	Longest Valid Parentheses
Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring. For "(()", the longest valid parentheses substring is "()", which has length = 2. Another example is ")()())", where the longest valid parentheses substring is "()()", which has length = 4.

Use stack to push the ( 

public class Solution {
    public int longestValidParentheses(String s) {
        if(s==null||s.length()==0) return 0;
        Stack<Integer> stack=new Stack<Integer>();
        int last=-1;
        int max=0;
        for(int i=0 ;i<s.length(); i++){
            if(s.charAt(i)=='('){
                stack.push(i);
            }else{
                if(stack.isEmpty()){
                    last=i;
                }else{
                    stack.pop();
                    if(stack.isEmpty()){
                        max=Math.max(i-last, max);
                    }else{
                        max=Math.max(i-stack.peek() , max);
                    }
                }
            }
        }
        return max;
    }
}
