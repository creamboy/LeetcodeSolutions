103.	Binary Tree Zigzag Level Order Traversal
Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).
For example:
Given binary tree {3,9,20,#,#,15,7}, return its zigzag level order traversal as: [ [3], [20,9], [15,7] ]



public class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res=new ArrayList<List<Integer>>();
        List<TreeNode> level=new ArrayList<TreeNode>();
        if(root==null) return res;
        level.add(root);
        int count=0;
        while(!level.isEmpty()){
            List<TreeNode> nextlevel=new ArrayList<TreeNode>();
            List<Integer> current=new ArrayList<Integer>();
            for(int i=0; i<level.size(); i++){
                TreeNode node=level.get(i);
                if (node.left != null) nextlevel.add(node.left);
                if (node.right != null) nextlevel.add(node.right);
            }
            if(count%2==1){
                Collections.reverse(level);
            }
            for(int i=0; i<level.size(); i++){
                    current.add(level.get(i).val);
            }
            res.add(current);
            level=nextlevel;
            count++;
        }
        return res;
    }
}
