153.	Find Minimum in Rotated Sorted Array
Suppose a sorted array is rotated at some pivot unknown to you beforehand.(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).Find the minimum element.You may assume no duplicate exists in the array.

Time ~ O(logN), Space ~ O(1)
注意是 sorted array，所以：
1. 如果 num[lo] 不大于 num[hi]（循环附加条件），即 array 没有被 rotate，可停止循环，返回 num[lo] 为 min。
2. 剔除了 unrotated array 后，有两种情况：
num[mid] > num[lo], num[mid] > num[hi]：mid 和 lo 在一侧，则移动 lo；
num[mid] < num[lo], num[mid] < num[hi]：mid 和 hi 在一侧，则移动 hi。

public class Solution {
    public int findMin(int[] nums) {
        int low=0;
        int high=nums.length-1;
        while(low<high){
            int mid=low+(high-low)/2;
            if(nums[mid]<nums[high]){
                high=mid;
            }else{
                low=mid+1;
            }
        }
        return nums[low];
    }
}
