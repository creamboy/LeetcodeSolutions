113.	Path Sum II
Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.



public class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res=new ArrayList<List<Integer>>();
        helper(root, sum, new ArrayList<Integer>(), res);
        return res;
    }
    public void helper(TreeNode root, int sum, List<Integer> item, List<List<Integer>> res){
        if (root == null) return;
        sum-=root.val;
        item.add(root.val);
        if (root.left == null && root.right == null&&sum==0) {
              res.add(new ArrayList<Integer>(item));
        }else{
            helper(root.left, sum, item, res);
            helper(root.right, sum, item, res);
        }
        item.remove(item.size()-1);
    }
}
