218 The Skyline Problem
Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Greedy algorithm: Time ~ O(N), Space ~ O(1)
Use two pointers.
给定两条 line，容积取决于短的那条。
由此可知，只需改变短的那条、向长的那条靠拢的方向搜寻，看是否有增加容积的可能（如果是改变长的那条、往短的方向靠拢，是不可能增加容积的）。
所以用两个 pointer，从两端向中间搜索，直到相遇为止，期间记录最大的容积。

 public class Solution {
    public int maxArea(int[] height) {
        if(height.length==0) return 0;
        if(height.length==1) return height[1];
        int left=0, right=height.length-1;
        int max=0;
        while(left<right){
            max=Math.max(max, Math.min(height[left], height[right])*(right-left));
           if(height[left]<height[right]) left++;
           else right--; 
        }
        return max;
    }
}
