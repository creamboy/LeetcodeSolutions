15. 3 Sum
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.
Note:
Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},
    A solution set is:
    (-1, 0, 1)
(-1, -1, 2)

Two pointers: Time ~ O(N^2), Space ~ O(1)

public class Solution {
    public List<List<Integer>> threeSum(int[] num) {
        List<List<Integer>> res=new ArrayList<List<Integer>>();
        if(num.length<3) return res;
        Arrays.sort(num);
        for(int i=0; i<num.length-2; i++){
            if(i==0||num[i]>num[i-1]){
                int temp=num[i];
                int start=i+1;
            int end=num.length-1;
            while(start<end){
                if(num[start]+num[end]+temp==0){
                    ArrayList<Integer> item=new ArrayList<Integer>();
                    item.add(num[i]);
                    item.add(num[start]);
                    item.add(num[end]);
                    res.add(item);
                    start++;
                    end--;
                    while(start<end&&num[end]==num[end+1]){
                        end--;
                    }
                    while(start<end&&num[start]==num[start-1]){
                        start++;
                    }
                }
                else if(num[start]+num[end]+temp<0){
                    start++;
                }else if(num[start]+num[end]+temp>0){
                    end--;
                }
            }
            }
            
        }
        return res;
    }
}
