154.	Find Minimum in Rotated Sorted Array II
Follow up for "Find Minimum in Rotated Sorted Array": What if duplicates are allowed?Would this affect the run-time complexity? How and why?Suppose a sorted array is rotated at some pivot unknown to you beforehand.(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).Find the minimum element.The array may contain duplicates.

当存在 duplicates 时会增加另一种情况：
不论 mid 在哪一侧：num[mid] == num[lo] or num[mid] == num[hi]，则将 hi 后移一位（也可将 lo 前移一位）。

public class Solution {
    public int findMin(int[] nums) {
        int low=0;
        int high=nums.length-1;
        while(low<high){
            int mid=low+(high-low)/2;
            if(nums[mid]>nums[high]){
                low=mid+1;
            }else if(nums[mid]<nums[high]){
                high=mid;
            }else{
                if(nums[low]==nums[mid]){
                    low++;
                    high--;
                }else{
                    high=mid;
                }
            }
        }
        return nums[low];
    }
}

