170. Two Sum III - Data structure design 
Design and implement a TwoSum class. It should support the following operations: add and find. 
add - Add the number to an internal data structure. 
find - Find if there exists any pair of numbers which sum is equal to the value. 
For example, add(1); add(3); add(5); find(4) -> true find(7) -> false

Hash Table: Time: add ~ O(1), find ~ O(N), Space ~ O(N) 
用一个 Hash Table，key 存放 number，value 存放出现次数 count。 
add()：update Hash Table 中相应的 count； find()：遍历 Hash Table，对于每一个 num，有两种情况： num == value - num: check if count >= 2; num != value - num: check if containsKey(value - num).

public class TwoSum {
    private Map<Integer, Integer> map = new HashMap<>();
    
    public void add(int number) {
        int count = map.containsKey(number) ? map.get(number) : 0;
        map.put(number, count + 1);
    }

    public boolean find(int value) {
        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {
            int num = entry.getKey();
            int y = value - num;
            if (y == num) {
                if (entry.getValue() >= 2)  return true;
            }
            else if (map.containsKey(y))
                return true;
        }
        return false;
    }
}
