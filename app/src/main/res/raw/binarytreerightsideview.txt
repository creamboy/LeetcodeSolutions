199 Binary Tree Right Side View
Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.
For example:
Given the following binary tree,
   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---
You should return [1, 3, 4].

Solution
Level-order Traversal: Time ~ O(N), Space ~ O(N)
因为可能存在右边比左边长的部分，所以要遍历所有节点找到每行的最后一个 Node（q.peek() == null）。


public class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> list=new ArrayList<>();
        if(root==null) return list;
        Queue<TreeNode> q=new LinkedList<>();
        q.add(root);
        q.add(null);
        while(!q.isEmpty()){
            TreeNode curr=q.poll();
            while(curr!=null){
                if(curr.left!=null) q.add(curr.left);
                if(curr.right!=null) q.add(curr.right);
                if(q.peek()==null) list.add(curr.val);
                curr=q.poll();
            }
            if(!q.isEmpty()) q.add(null);
        }
        return list;
    }
}