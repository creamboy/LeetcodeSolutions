29. Divide Two Integers
Divide two integers without using multiplication, division and mod operator. If it is overflow, return MAX_INT.

Bit Manipulation: Time ~ O(logNa), Space ~ O(1) 
Find a N such that: divisor * 2^N < dividen < divisor * 2^(N + 1)
Then, result += 2^N; dividen -= divisor * 2^N; Repeat until dividen < divisor.
3种特殊情况

public class Solution {
    public int divide(int dividend, int divisor) {
        if (divisor == 0 || (dividend == Integer.MIN_VALUE && divisor == -1)) return Integer.MAX_VALUE;
        if (dividend != Integer.MIN_VALUE && Math.abs(dividend) < Math.abs(divisor)) return 0;
        if (divisor == Integer.MIN_VALUE)
            return (dividend == Integer.MIN_VALUE) ? 1 : 0;
        long a=Math.abs((long)dividend);
        long b=Math.abs((long)divisor);
        long result=0;
        while(a>=b){
            long c=b;
            int i=0;
            while(c<=a){
                a=a-c;
                c=c<<1;
                result=result+(1<<i);
                i++;
            }
        }
        if(dividend<0&&divisor>0||dividend>0&&divisor<0) result=-result;
        return (int)result;
    }
}

