55.	Jump Game
Given an array of non-negative integers, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position. Determine if you are able to reach the last index. For example: A = [2,3,1,1,4], return true. A = [3,2,1,0,4], return false.

Greedy algorithm: Time ~ O(N), Space ~ O(1)
Go from left to right, check if the rightmost can be reached.
At each index i, calculate the rightmost index that can be reached:
reach = max{reach, i + A[i]};
If the last index can be reached, then every index can be reached.
注意：循环条件是 i <= reach && reach < A.length，对于在中途出现无法到达的情况即停止。

public class Solution {
    public boolean canJump(int[] A) {
        if(A.length==0) return false;
        int reach=1;
        for(int i=0;i<A.length&&i<reach;i++){
            reach=Math.max(reach, i+A[i]+1);
        }
        return reach>=A.length;
    }
}
