97.	Interleaving String
Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.For example, Given:s1 = "aabcc",s2 = "dbbca",When s3 = "aadbbcbcac", return true. When s3 = "aadbbbaccc", return false.

 2-d DP: Time ~ O(N1*N2), Space ~ O(N1*N2)
注意：先判断长度，若 s1 + s2 != s3 即停止。
Let d(i, j) = true iff s3[0, i + j - 1] is an interleaving of s1[0, i - 1] and s2[0, j - 1].
Initialize: int[N1 + 1][N2 + 1]（0 <= i <= N1,  0 <= j <= N2 是长度）
d(0, 0) = true;
d(i, 0) = d(i - 1, 0) && s1[i - 1] == s3[i - 1];
d(0, j) = d(0, j - 1) && s2[j - 1] == s3[j - 1];
Fill up the table:
d(i, j) = (d(i - 1, j) && s1[i - 1] == s3[i + j - 1]) || (d(i, j - 1) && s2[j - 1] == s3[i + j - 1]);
Return d(N1, N2);

public class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        if(s1.length()+s2.length() != s3.length()) return false;
        boolean[][] res=new boolean[s2.length()+1][s1.length()+1];
        res[0][0]=true;
        for(int j=1; j<s1.length()+1; j++){
            res[0][j]=res[0][j-1] && s1.charAt(j-1)==s3.charAt(j-1);
        }
        for(int i=1; i<s2.length()+1; i++){
            res[i][0]=res[i-1][0] && s2.charAt(i-1)==s3.charAt(i-1);
        }
        for(int i=1; i<s2.length()+1; i++){
            for(int j=1; j<s1.length()+1; j++){
                res[i][j]=(res[i-1][j] && s2.charAt(i-1)==s3.charAt(i+j-1)) ||(res[i][j-1] && s1.charAt(j-1)==s3.charAt(i-1+j));
            }
        }
        return res[s2.length()][s1.length()];
    }
}

