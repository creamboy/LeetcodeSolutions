56.	Merge Intervals
Given a collection of intervals, merge all overlapping intervals. For example, Given [1,3],[2,6],[8,10],[15,18], return [1,6],[8,10],[15,18].

这道题需要先对集合 sort（需要定义Comparator）

/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public List<Interval> merge(List<Interval> intervals) {
        if(intervals==null ||intervals.size()<=1) return intervals;
        Collections.sort(intervals, new IntervalComparator());
        List<Interval> res=new ArrayList<Interval>();
        Interval prev=intervals.get(0);
        for(int i=0; i<intervals.size(); i++){
            Interval curr=intervals.get(i);
            if(prev.end>=curr.start){
                Interval merged=new Interval(prev.start, Math.max(prev.end, curr.end));
                prev=merged;
            }else{
                res.add(prev);
                prev=curr;
            }
        }
        res.add(prev);
        return res;
    }
}
class IntervalComparator implements Comparator<Interval>{
    public int compare(Interval i1, Interval i2){
        return i1.start-i2.start;
    }
}
