41.	First Missing Positive
Given an unsorted integer array, find the first missing positive integer. For example, Given [1,2,0] return 3, and [3,4,-1,1] return 2. Your algorithm should run in O(n) time and uses constant space.

Use index and Swap elements: Time ~ O(2N), Space ~ O(1)
扫两遍数组：
第一遍找 A[i] != i + 1 的元素，交换 A[i] 和 A[A[i] - 1]；
第二遍找 A[i] != i + 1 的元素，即返回 i + 1。
注意edge cases:
A[i] == A[A[i] - 1]（e.g., [1, 1]），会引起dead loop；
A[i] > A.length （e.g., [3, 1]），直接跳过。

public class Solution {
    public int firstMissingPositive(int[] nums) {
        if(nums==null || nums.length==0) return 1;
        for(int i=0; i<nums.length; i++){
            while(nums[i]<=nums.length&&nums[i]>0&&nums[nums[i]-1]!=nums[i]){
                int temp=nums[nums[i]-1];
                nums[nums[i]-1]=nums[i];
                nums[i]=temp;
            }
        }
        for(int i=0; i<nums.length; i++){
            if(nums[i]!=i+1){
                return i+1;
            } 
        }
        return nums.length+1;
    }
}

