52.	N-Queens II
Follow up for N-Queens problem. Now, instead outputting board configurations, return the total number of distinct solutions.

Follow up for N-Queens problem.
Now, instead outputting board configurations, return the total number of distinct solutions.

public class Solution {
    public int totalNQueens(int n) {
        int[] res={0};
        if(n<=0) return res[0];
        int[] item=new int[n];
        helper(res, item, n, 0);
        return res[0];
    }
    public void helper(int[] res, int[] item, int n, int pos){
        if(pos==n){
           res[0]++;
           return;
        }else{
            for(int i=0; i<n; i++){
                item[pos]=i;
                if(isValid(item, pos)){
                    helper(res, item, n, pos+1);
                }
            }
        }
    }
    public boolean isValid(int[] item, int pos){
        for(int i=0; i<pos; i++){
            if(item[i]==item[pos] || Math.abs(item[i]-item[pos])==pos-i) return false;
        }
        return true;
    }
}

