42.	Trapping Rain Water
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining. For example, Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.

wo Pointers: Time ~ O(N), Space ~ O(1)
改进方法一：用两个 pointer：start 和 end 从两头夹逼，同时分别记录 left max hight (lmh) 和 right max hight (rmh)；
当 lmh < rmh 时，start 上最多可以存放的 water 为 lmh - A[start]；
当 lmh > rmh 时，end 上最多可以存放的 water 为 rmh - A[end]；
这样扫完一遍，累加即可得到总的存放 water 的量。

public class Solution {
    public int trap(int[] height) {
        int n=height.length;
        if (n == 0) return 0;
        int l = 0, r = n - 1;
        int lv = height[l], rv = height[r];
        int total = height[l] + height[r], rainTotal = total;
        while (l != r){
            if (height[l] < height[r]){
                l++;
                total += height[l];
                lv = Math.max(lv, height[l]);
                rainTotal += lv;
            }
            else{
                r--;
                total += height[r];
                rv = Math.max(rv, height[r]);
                rainTotal += rv;
            }
        }
        return rainTotal - total;
    }
}
