220 Contains Duplicate III
Given an array of integers, find out whether there are two distinct indices i and j in the array such that the difference between nums[i] and nums[j] is at most t and the difference between i and j is at most k.

Solution
TreeSet O(NlogK)

public class Solution {
    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {
        if (nums == null || nums.length == 0 || k <= 0) {
            return false;
        }
        final TreeSet<Integer> values = new TreeSet<>();
        for (int i = 0; i < nums.length; i++) {
            final Integer floor = values.floor(nums[i] + t);
            final Integer ceil = values.ceiling(nums[i] - t);
            if ((floor != null && floor >= nums[i])|| (ceil != null && ceil <= nums[i])) {
                return true;
            }
            values.add(nums[i]);
            if (i >= k) {
                values.remove(nums[i - k]);
            }
        }
        return false;
    }
}