144.	Binary Tree Preorder Traversal

Use a Stack: Time ~ O(N), Space ~ O(N)
先找到最左节点，然后一层层往上返回，没返回一层节点，要进入其右子树遍历（重复该过程）。

public class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> res=new ArrayList<Integer>();
        Stack<TreeNode> stack=new Stack<TreeNode>();
        stack.push(null);
        while(root!=null){
            res.add(root.val);
            if(root.right!=null){
                stack.push(root.right);
            }
            if(root.left!=null){
                stack.push(root.left);
            }
            root=stack.pop();
        }
        return res;
    }
}
